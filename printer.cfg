# This file contains common pin mappings for the Duet3 Mini 5+. To use
# this config, the firmware should be compiled for the ATSAMD51P20
# with a "25Mhz crystal", "16KiB bootloader", and USB communication.

# To flash the board, double tap the board's reset button to enter the
# bootloader and then run: make flash FLASH_DEVICE=/dev/ttyACM0

# See docs/Config_Reference.md for a description of parameters.


# Pins for reference:
# Driver Step Pins - 0:PC26, 1:PC25, 2:PC24, 3:PC19, 4:PC16, 5:PC30, 6:PC18
# Driver Dir pins - 0:PB3, 1:PB29, 2:PB28, 3:PD20, 4:PD21, 5:PB0, 6:PA27
# Driver Enable - !PC28
# Uart addresses - 0:0 1:1 2:2 3:3 4:!0 5:!1 6:!2 | "!" is for inverted select pin
# Thermistor Pins - T0:PC0, T1:PC1, T2:PC2
# Vssa Sense:PB4 | Vref Sense:PB5
# Current Sense resistor for drivers - .076ohm
# SPI lines:{PD11, PC7} -> Shared SerCom#7, SPIMosi:PC12, SPIMiso:PC15, SPISCLK:PC13
# Vin Monitor:PC3, uses 11:1 voltage divider
# LED's - Diag:PA31, Act:PA30
# 12864 LCD - LCDCSPIN:PC6, ENCA:PC11, ENCB:PD1, ENCSW:PB9, LCD A0:PA2, LCDBeep:PA9, LCD Neopixel Out:PB12 (shared with IO3.out)
# Neopixel Out - PA8
# Serial0 - TX:PB25, RX:PB24 (USB)
# Serial1 - TX:PB31, RX:PB30
# SBC SPISS pin:PA6, SBCTfrReady:PA3, SerComPins:{PA4, PA5, PA6, PA7}
# CAN Pins - TX:PB14 RX:PB15
# Heaters, Fan outputs - {Out0:PB17 Out1:PC10 Out2:PB13 Out3:PB11 Out4:PA11, Out5:PB2, Out6:PB1} | Out6 is shared with VFD_Out
# Tach Pins for Fans - {Out3.Tach:PB27 Out4.Tach:PB26}
# GPIO_out - {IO1:PB31 IO2:PD9 IO3:PB12 IO4:PD10} IO4 is shared with PSON
# GPIO_in - {IO1:PB30 IO2:PD8 IO3:PB7 IO4:PC5 IO5:PC4 IO6:PC31}
# Driver Diag - {D0:PA10, D1:PB8, D2:PA22, D3:PA23, D4:PC21, D5:PB10, D6:PA27}
# Mux Pin - PD0
# EXP headers only support 12864 LCD's

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: cadbf24f2a32

[mcu]
##  this is fixwd should not be changed for big dipper
serial: /dev/ttyACM0
restart_method: command

[include mainsail.cfg]
[include ./klicky-probe.cfg]  
[include ./klicky-autoz.cfg]    
[include macro_start.cfg]    
[include printer-xy.cfg]    
[include printer-z.cfg]    
[include printer-bed.cfg]    
[include printer-head.cfg]    
[include stealthburner_leds.cfg]    
[include printer-resonance.cfg]    

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 120

# [temperature_sensor raspberry_pi]
# sensor_type: temperature_host
# min_temp: 0
# max_temp: 100

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[idle_timeout]
timeout: 1800



[temperature_sensor chamber_sensor]
sensor_type: Generic 3950
sensor_pin: PC1
pullup_resistor: 2200




[filament_switch_sensor filament]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^PB7
#   The pin on which the switch is connected. This parameter must be
#   provided.





# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:-10,-10
# speed:100
# z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5

## Uncomment below for 300mm build
#z_positions:
#   -50, 18
#   150, 348
#   350, 18
#points:
#   30, 5
#   150, 245
#   270, 5

## Uncomment below for 350mm build
#z_positions:
#   -50, 18
#   175, 398
#   400, 18
#points:
#   30, 5
#   175, 295
#   320, 5


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 8
retry_tolerance: 0.0075

[temperature_fan electronic_fan]
# Exhaust/Chamber fan - Z board, HE0 Connector
pin: PB2
max_power: .6
shutdown_speed: 0.0
kick_start_time: 5.0
# Chamber Thermistor
sensor_type: Generic 3950
sensor_pin: PC2
pullup_resistor: 2200
min_temp: 0
max_temp: 80.0
target_temp: 35.0   ; Activate Exhaust fan at this temperature
control: watermark
gcode_id: Cz

[temperature_fan electronic_rpi]
# Exhaust/Chamber fan - Z board, HE0 Connector
pin: PB1
max_power: .6
shutdown_speed: 0.0
kick_start_time: 5.0
# Chamber Thermistor
sensor_type: temperature_host
min_temp: 0
max_temp: 80.0
target_temp: 50.0   ; Activate Exhaust fan at this temperature
control: watermark


# [fan_generic electronic_fan1]
# pin: PB1
# max_power: 1.0
# #shutdown_speed:
# #cycle_time:
# #hardware_pwm:
# kick_start_time: 0.5
# off_below: 0.1
# #tachometer_pin:
# #tachometer_ppr:
# #tachometer_poll_interval:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.030
#*# pid_ki = 1.240
#*# pid_kd = 136.657
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.106875, 0.081250, 0.068125, 0.055625, 0.076875
#*# 	0.035625, 0.042500, 0.047500, 0.035000, 0.019375
#*# 	0.020625, 0.044375, 0.028125, 0.000000, 0.011875
#*# 	0.021875, 0.045625, 0.038750, 0.027500, 0.053125
#*# 	0.038125, 0.074375, 0.069375, 0.085000, 0.111250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 40.0
#*# max_y = 220.0
#*#
#*# [bed_mesh hot]
#*# version = 1
#*# points =
#*# 	0.106875, 0.081250, 0.068125, 0.055625, 0.076875
#*# 	0.035625, 0.042500, 0.047500, 0.035000, 0.019375
#*# 	0.020625, 0.044375, 0.028125, 0.000000, 0.011875
#*# 	0.021875, 0.045625, 0.038750, 0.027500, 0.053125
#*# 	0.038125, 0.074375, 0.069375, 0.085000, 0.111250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 40.0
#*# max_y = 220.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 56.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 42.0
