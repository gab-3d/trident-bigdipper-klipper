# This file contains common pin mappings for the Duet3 Mini 5+. To use
# this config, the firmware should be compiled for the ATSAMD51P20
# with a "25Mhz crystal", "16KiB bootloader", and USB communication.

# To flash the board, double tap the board's reset button to enter the
# bootloader and then run: make flash FLASH_DEVICE=/dev/ttyACM0

# See docs/Config_Reference.md for a description of parameters.


# Pins for reference:
# Driver Step Pins - 0:PC26, 1:PC25, 2:PC24, 3:PC19, 4:PC16, 5:PC30, 6:PC18
# Driver Dir pins - 0:PB3, 1:PB29, 2:PB28, 3:PD20, 4:PD21, 5:PB0, 6:PA27
# Driver Enable - !PC28
# Uart addresses - 0:0 1:1 2:2 3:3 4:!0 5:!1 6:!2 | "!" is for inverted select pin
# Thermistor Pins - T0:PC0, T1:PC1, T2:PC2
# Vssa Sense:PB4 | Vref Sense:PB5
# Current Sense resistor for drivers - .076ohm
# SPI lines:{PD11, PC7} -> Shared SerCom#7, SPIMosi:PC12, SPIMiso:PC15, SPISCLK:PC13
# Vin Monitor:PC3, uses 11:1 voltage divider
# LED's - Diag:PA31, Act:PA30
# 12864 LCD - LCDCSPIN:PC6, ENCA:PC11, ENCB:PD1, ENCSW:PB9, LCD A0:PA2, LCDBeep:PA9, LCD Neopixel Out:PB12 (shared with IO3.out)
# Neopixel Out - PA8
# Serial0 - TX:PB25, RX:PB24 (USB)
# Serial1 - TX:PB31, RX:PB30
# SBC SPISS pin:PA6, SBCTfrReady:PA3, SerComPins:{PA4, PA5, PA6, PA7}
# CAN Pins - TX:PB14 RX:PB15
# Heaters, Fan outputs - {Out0:PB17 Out1:PC10 Out2:PB13 Out3:PB11 Out4:PA11, Out5:PB2, Out6:PB1} | Out6 is shared with VFD_Out
# Tach Pins for Fans - {Out3.Tach:PB27 Out4.Tach:PB26}
# GPIO_out - {IO1:PB31 IO2:PD9 IO3:PB12 IO4:PD10} IO4 is shared with PSON
# GPIO_in - {IO1:PB30 IO2:PD8 IO3:PB7 IO4:PC5 IO5:PC4 IO6:PC31}
# Driver Diag - {D0:PA10, D1:PB8, D2:PA22, D3:PA23, D4:PC21, D5:PB10, D6:PA27}
# Mux Pin - PD0
# EXP headers only support 12864 LCD's

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: cadbf24f2a32

[mcu]
##  this is fixwd should not be changed for big dipper
serial: /dev/ttyACM0
restart_method: command

[include mainsail.cfg]
[include ./klicky-probe.cfg]  
[include ./klicky-autoz.cfg]    
[include macro_start.cfg]    

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 120

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PC19
dir_pin: PD20
enable_pin: !PC28
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^PC31
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
position_endstop: 250
position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PA1
tx_pin: PA0
uart_address: 3
select_pins: PD0
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PC16
dir_pin: PD21
enable_pin: !PC28
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PC4  
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
position_endstop: 250
position_max: 252

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PA1
tx_pin: PA0
uart_address: 0
select_pins: !PD0
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2

[stepper_z]
step_pin: PC25
dir_pin: !PB29
enable_pin: !PC28
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32
endstop_pin: ^PC5 

#endstop_pin: EBBCan: PC13
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop: -0.5
## All builds use same Max Z
position_max: 250
position_min: -8
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 1
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3


[stepper_z1]
step_pin: PC26
dir_pin: !PB3
enable_pin: !PC28
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8    
microsteps: 32


##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 0
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PC24
dir_pin: !PB28
enable_pin: !PC28
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


[adc_scaled vref_scaled]
vref_pin: PB5
vssa_pin: PB4


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PB17 #out1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: vref_scaled:PC0
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1
min_temp: 5
max_temp: 130
control: pid
pullup_resistor: 2200
# pid_kp: 58.437
# pid_ki: 2.347
# pid_kd: 363.769
pid_Kp=40.324 
pid_Ki=1.093 
pid_Kd=371.992


[temperature_sensor chamber_sensor]
sensor_type: Generic 3950
sensor_pin: PC1
pullup_resistor: 2200




[filament_switch_sensor my_sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: ^PB7
#   The pin on which the switch is connected. This parameter must be
#   provided.

[adxl345]
cs_pin: EBBCan: PB12
spi_bus: spi2
axes_map: x,y,z


[extruder]
step_pin: EBBCan: PA9
dir_pin: EBBCan: PA8
enable_pin: !EBBCan: PA10
microsteps: 16
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance = 5.586                                             # See calibrating rotation_distance on extruders doc
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB1
sensor_type: Generic 3950
sensor_pin: EBBCan: PA0
#control: pid
#pid_Kp = 26.780
#pid_Ki = 1.879
#pid_Kd = 95.402
min_temp: 10
max_temp: 270
min_extrude_temp: 20

#sensor_type:MAX31865
#sensor_pin: EBBCan: PA15
#spi_bus: spi1a
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA13
run_current: 0.650
#stealthchop_threshold: 999999

[fan]
pin: EBBCan: PA2
kick_start_time: 2
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
max_power: 1.0
#ardware_pwm: true
cycle_time: 0.2

[heater_fan hotend_fan]
pin: EBBCan: PA1
heater: extruder
max_power: 1
kick_start_time: 0.5
heater_temp: 50.0
#fan_speed: .8

[neopixel hotend_rgb]
pin: EBBCan:PA3
chain_count:3
color_order: GRB

#[bltouch]
#sensor_pin: ^EBBCan:PA5
#control_pin: EBBCan:PA4

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB6

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB7
#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: EBBCan: PC13
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 19.75
z_offset: 0.42
speed: 5
samples:1 
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

# [bed_mesh]
# horizontal_move_z: 10

[idle_timeout]
timeout: 1800

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:-10,-10
# speed:100
# z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
## Uncomment below for 250mm build
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5

## Uncomment below for 300mm build
#z_positions:
#   -50, 18
#   150, 348
#   350, 18
#points:
#   30, 5
#   150, 245
#   270, 5

## Uncomment below for 350mm build
#z_positions:
#   -50, 18
#   175, 398
#   400, 18
#points:
#   30, 5
#   175, 295
#   320, 5


##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 15
retries: 8
retry_tolerance: 0.0075

[temperature_fan electronic_fan2]
# Exhaust/Chamber fan - Z board, HE0 Connector
pin: PB2
max_power: .6
shutdown_speed: 0.0
kick_start_time: 5.0
# Chamber Thermistor
sensor_type: Generic 3950
sensor_pin: PC2
pullup_resistor: 2200
min_temp: 0
max_temp: 80.0
target_temp: 35.0   ; Activate Exhaust fan at this temperature
control: watermark
gcode_id: Cz


[temperature_fan electronic_fan1]
# Exhaust/Chamber fan - Z board, HE0 Connector
pin: PB1
max_power: .6
shutdown_speed: 0.0
kick_start_time: 5.0
# Chamber Thermistor
sensor_type: Generic 3950
sensor_pin: PC2
pullup_resistor: 2200
min_temp: 0
max_temp: 80.0
target_temp: 35.0   ; Activate Exhaust fan at this temperature
control: watermark
gcode_id: Cz




[fan_generic electronic_fan1]
pin: PB1
max_power: 1.0
#shutdown_speed:
#cycle_time:
#hardware_pwm:
kick_start_time: 0.5
off_below: 0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.030
#*# pid_ki = 1.240
#*# pid_kd = 136.657
